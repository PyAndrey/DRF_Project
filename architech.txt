API для учета расходов (Expense Tracker)
Описание: Разработайте API для отслеживания личных финансов, где пользователи могут добавлять доходы, расходы и категории, а также просматривать отчеты.
Что изучите:
Модели с полями типа Decimal для работы с деньгами.
Фильтрация и агрегация данных для отчетов.
Валидация входных данных.
Пользовательские настройки и права доступа.

myproject/
│
├── myproject/          # Корневой пакет с настройками проекта
│   ├── __init__.py
│   ├── settings.py     # Настройки проекта
│   ├── urls.py         # Главный файл маршрутов
│   ├── wsgi.py         # WSGI-конфигурация
│   └── asgi.py         # ASGI-конфигурация (если нужен асинхронный сервер)
│
├── apps/               # Папка для всех приложений
│   ├── __init__.py
│   ├── core/           # Основное приложение проекта (например, для пользователей или базовой логики)
│   ├── users/          # Приложение для пользователей (например, регистрация, профили)
│   └── api/            # Приложение для API (если используете Django Rest Framework)
│
├── static/             # Статические файлы (CSS, JS, изображения и т.д.)
├── media/              # Загруженные пользователями файлы (изображения, документы и т.д.)
├── templates/          # HTML-шаблоны
│
├── manage.py           # Точка входа для управления проектом Django
└── requirements.txt    # Список зависимостей

apps/
├── core/               # Основное приложение
│   ├── __init__.py
│   ├── admin.py        # Настройки для админки Django
│   ├── apps.py         # Конфигурация приложения
│   ├── models.py       # Модели данных
│   ├── views.py        # Представления (если есть логика для обычных представлений)
│   ├── urls.py         # Маршруты для этого приложения
│   └── tests.py        # Тесты для этого приложения
│
├── users/              # Приложение для управления пользователями
│   ├── __init__.py
│   ├── admin.py
│   ├── apps.py
│   ├── models.py
│   ├── views.py
│   ├── urls.py
│   └── tests.py
│
└── api/                # Приложение для API
    ├── __init__.py
    ├── admin.py
    ├── apps.py
    ├── models.py
    ├── serializers.py # Сериализаторы для API
    ├── views.py
    ├── urls.py
    ├── permissions.py # Разрешения API
    └── tests.py

users/
├── __init__.py
├── admin.py            # Конфигурация модели пользователя для админки
├── apps.py             # Конфигурация приложения
├── models.py           # Модели (например, для пользователя, профиля)
├── views.py            # Представления для аутентификации/регистрации пользователей
├── serializers.py      # Сериализаторы для API (если используется DRF)
├── urls.py             # Маршруты для регистрации, аутентификации и профиля
├── forms.py            # Формы Django для регистрации, входа, редактирования профиля
└── tests.py            # Тесты для этого приложения

